#!/bin/bash
#
# description: spring4gateway
# processname: spring4gateway
# chkconfig: 234 80 20


LANG=en_US.UTF-8
LANGUAGE=zh_CN.GB18030:zh_CN.GB2312:zh_CN

. /etc/profile
. ~/.bash_profile

export JAVA_HOME="/usr/java/latest"

##基础参数
model=gateway
jmxPort=8000
envS=xxxx
platform=xxxxx
BASE_HOME=/opt/product/$model

if [[ $envS = "test" ]]
then
    PPEnv="beta"
else
    PPEnv="prod"
fi
PPDir="/opt/xxxx"
PPService=xxxx
AgentID=xxxxxx
###时间戳
TMS=`date '+%s'`
TTD=`date '+%Y%m%d'`

app=xxxxxx.jar
WORK_HOME=$(cd $(dirname $0)/; pwd)

LOG_DIR=/data/xxxx
mkdir -p $LOG_DIR

SPRINGBOOT_USAGE="Usage: $0 {\e[00;32mstart\e[00m|\e[00;31mstop\e[00m|\e[00;31mkill\e[00m|\e[00;32mstatus\e[00m|\e[00;31mrestart\e[00m}"
 
SHUTDOWN_WAIT=20
 
springboot_pid() {
        echo `ps -fe | grep $BASE_HOME|grep "/$app" | grep -v grep | tr -s " "|cut -d" " -f2`
}

###
if [ "$envS" = "prod" ]
then
  JVM_OPTS="-Xms8G -Xmx8G -XX:NewRatio=3"
else
  JVM_OPTS="-Xms2G -Xmx2G -XX:NewRatio=3"
fi

###
JVM_PERFORMANCE_OPTS="-Djava.awt.headles=true \
-XX:+AlwaysPreTouch \
-XX:-OmitStackTraceInFastThrow  \
-XX:+UseConcMarkSweepGC \
-XX:CMSInitiatingOccupancyFraction=75 \
-XX:+CMSScavengeBeforeRemark"

###
JVM_HD_OPTS="-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$LOG_DIR/ -XX:ErrorFile=$LOG_DIR/hs_err_pid%p.hprof"

###
GC_LOG_OPTS="-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -Xloggc:$LOG_DIR/gc-$model-$TMS.log"

###
BOOT_ENV="--spring.profiles.active=$envS"

###
JMX_OPTS="-Dcom.sun.management.jmxremote=true \
-Dcom.sun.management.jmxremote.port=$jmxPort \
-Dcom.sun.management.jmxremote.ssl=false \
-Dcom.sun.management.jmxremote.authenticate=false "

###
DEBUG_OPTS="-agentlib:jdwp=transport=dt_socket,server=y,address=8000,suspend=n"

###

start() {
  pid=$(springboot_pid)
  if [ -n "$pid" ]
  then
    echo -e "spring4$model is already running (pid: $pid)"
  else
    # Start springboot
    echo -e "Starting spring4$model"
    cd $BASE_HOME 
    if [ "$envS" = "prod" ]
    then
        nohup java -Djava.security.egd=file:/dev/./urandom \
        -javaagent:${PPDir}/skywalking-agent.jar \
        -Dskywalking.agent.service_name=${PPService} \
        -Dskywalking.agent.instance_properties[ProjectId]=${AgentID} \
        -Dfile.encoding=UTF-8 \
        -Duser.timezone=UTC+8 \
        -Dorg.apache.commons.jelly.tags.fmt.timeZone=Asia/Shanghai \
        $JVM_OPTS \
        $JVM_PERFORMANCE_OPTS \
        $JVM_HD_OPTS \
        $GC_LOG_OPTS \
        $JMX_OPTS \
        -jar $BASE_HOME/$app \
        $BOOT_ENV > $LOG_DIR/$model.log &
    else
        nohup java -Djava.security.egd=file:/dev/./urandom \
        -Dfile.encoding=UTF-8 \
        -Duser.timezone=UTC+8 \
        -Dorg.apache.commons.jelly.tags.fmt.timeZone=Asia/Shanghai \
        $JVM_OPTS \
        $JVM_PERFORMANCE_OPTS \
        $JVM_HD_OPTS \
        $GC_LOG_OPTS \
        $JMX_OPTS \
        -jar $BASE_HOME/$app \
        $BOOT_ENV > $LOG_DIR/$model.log &
    fi
    sleep 3  
    status
  fi
  return 0
}
 
status(){
          pid=$(springboot_pid)
          if [ -n "$pid" ]
            then echo -e "ok"
          else
            echo -e "spring4$model is not running"
            return 3
          fi
}

terminate() {
	echo -e "Terminating spring4$model"
	kill -9 $(springboot_pid)
}

stop() {
  pid=$(springboot_pid)
  if [ -n "$pid" ]
  then
    echo -e "Stoping spring4$model"
	kill  $(springboot_pid)
 
    let kwait=$SHUTDOWN_WAIT
    count=0;
    until [ `ps -p $pid | grep -c $pid` = '0' ] || [ $count -gt $kwait ]
    do
      echo -n -e "\n\e[00;31mwaiting for processes to exit\e[00m";
      sleep 1
      let count=$count+1;
    done
 
    if [ $count -gt $kwait ]; then
      echo -n -e "\n\e[00;31mkilling processes didn't stop after $SHUTDOWN_WAIT seconds\e[00m"
      terminate
    fi
  else
    echo -e "spring4$model is not running"
  fi
 
  return 0
}
 
case $1 in
	start)
	  start
	;;
	stop)  
	  stop
	;;
	restart)
	  stop
	  start
	;;
	status)
		status
		exit $?  
	;;
	kill)
		terminate
	;;		
	*)
		echo -e $SPRINGBOOT_USAGE
	;;
esac    
exit 0
