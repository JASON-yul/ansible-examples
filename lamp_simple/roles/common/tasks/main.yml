---
# 安装任务
- name: Install python bindings for SE Linux
  yum: name={{ item }} state=present
#with_items会自动循环执行yum语句，循环次数为with_items的元素个数，item变量即为with_items的两个元素依次执行
  with_items:
   - libselinux-python
   - libsemanage-python

- name: Create the repository for EPEL
  copy: src=epel.repo dest=/etc/yum.repos.d/epel.repo
        owner=root group=root mode=0644                      #可不写
  notify: update yum                                         #如果同步后文件的MD5值有变化，会触发update yum的handler

- name: Create the GPG key for EPEL
  copy: src=RPM-GPG-KEY-EPEL-6 dest=/etc/pki/rpm-gpg

- name: install some useful nagios plugins     #{字典格式}with_items的值是python list数据结构，可以理解为多个task循环读取list里面的值。key的默认名称为item。
  yum: name={{ item }} state=present
  with_items:
   - nagios-nrpe
   - nagios-plugins-swap
   - nagios-plugins-users
   - nagios-plugins-procs
   - nagios-plugins-load
   - nagios-plugins-disk

- name: Install ntp
  yum: name=ntp state=present
  tags: ntp

- name: Configure ntp file
  template: src=ntp.conf.j2 dest=/etc/ntp.conf
  tags: ntp
#当状态或模块发生变化时，将通知处理程序（handlers）处理，即执行handlers内配置文件，对应字段name： restart ntp
  notify: restart ntp

#确保软件是否正常运行
- name: Start the ntp service
  service: name=ntpd state=started enabled=yes
  tags: ntp

# 引用common内的temple模块，并将iptables.j2同步到远程主机的/etc/sysconfig/下
- name: insert iptables template
  template: src=iptables.j2 dest=/etc/sysconfig/iptables
  when: ansible_distribution_major_version != '7'
#当状态或模块发生变化时，将通知处理程序（handlers）处理，即执行handlers内配置文件，对应字段name: restart iptables
  notify: restart iptables

#运行getenforce来检测selinux是在运行状态，
- name: test to see if selinux is running
  command: getenforce
  register: sestatus
#不记录命令运行结果的changed状态，即changed为false
  changed_when: false
#变量加字符使用“+”号连接
- name: create the nagio object files
  template: src={{ item + ".conf"}}  dest=/etc/{{ item }}
  with_items:
    - webservers.conf
    - dbservers.conf
  notify: restart nagios


- name: debug loops
 #     debug: msg=" name=-----> {{ item.key }}   value -----> {{ item.value }}"
  #    yum: name={{ item }} state=present
  #    with_items:
  #      - nginx 
  #      - ntp
      shell: hostname
      register: host
  #    until: host.stdout.startswith("pri")              #判断host输出结果是否以‘pri’开头，是则结束，如果不是重复执行5次，每次间隔3秒
 #     retries: 5
 #     delay: 3
    - name: echo
      debug: msg="{{ host.stdout }} "
